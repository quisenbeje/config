
# use UTF8
	set -g utf8
	set-window-option -g utf8 on

	setw -g aggressive-resize on

# make tmux display things in 256 colors
	set -g default-terminal "screen-256color"

	setw -g xterm-keys on

# set scrollback history to 10000 (10k)
	set -g history-limit 10000

# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
	set -g prefix C-a
	unbind C-b

# use send-prefix to pass C-a through to application
	bind C-a send-prefix

# shorten command delay
	set -sg escape-time 1
	set -sg repeat-time 1000

# set window and pane index to 1 (0 by default)
	set-option -g base-index 0
	setw -g pane-base-index 1

# reload ~/.tmux.conf using PREFIX r
	bind r source-file ~/.tmux.conf \; display "Reloaded!"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
	bind v split-window -h -c "#{pane_current_path}"
	bind s split-window -v -c "#{pane_current_path}"

# Make the current window the first window
	bind T swap-window -t 1

# map Vi movement keys as pane movement keys
	bind -r C-h select-pane -L
	bind -r C-j select-pane -D
	bind -r C-k select-pane -U
	bind -r C-l select-pane -R
# Smart pane switching with awareness of vim splits
	is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
	bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
	bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
	bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
	bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
	bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# set window movement
	bind -r N select-window -t :-
	bind -r n select-window -t :+
	bind -r C-o last-window
	bind -r C-r rotate-window

# resize panes using PREFIX H, J, K, L
	bind -r H resize-pane -L 2
	bind -r J resize-pane -D 2
	bind -r K resize-pane -U 2
	bind -r L resize-pane -R 2

# explicitly disable mouse control
	setw -g mode-mouse off
	set -g mouse-select-pane off
	set -g mouse-resize-pane off
	set -g mouse-select-window off

# vi bindings
	setw -g mode-keys vi
	set -g status-keys vi
	bind-key -t vi-edit Up   history-up
	bind-key -t vi-edit Down history-down
		
# vi bindings in copy mode
	bind-key -t vi-copy 'v' begin-selection
	bind-key -t vi-copy 'C-v' rectangle-toggle
	bind-key -t vi-copy 'y' copy-selection
#bind-key -t vi-copy 'Y' send-keys b
#unbind Y
	unbind p
	bind p paste-buffer

# word delimiters for copy mode
	set-window-option -g word-separators ' @"=:,()[]\;'
	set-window-option -ag word-separators "'"

# quick search up of copy buffer
	bind ? \
		copy-mode \;\
		send-keys ? \;

# quick access to of copy buffer
	bind j \
		copy-mode \;\
		send-keys j \;
	bind k \
		copy-mode \;\
		send-keys k \;

# quick highlight of copy buffer
	bind V \
		copy-mode \;\
		send-keys l \;\
		send-keys b \;\
		send-keys v \;\
		send-keys e \;\
		send-keys y \;

# in copy-mode select the file and line number of grep results
	bind g send "0 f:t:" C-m "vimfg " \;\
		paste-buffer \;\
		send C-m

# in copy-mode select the time and system of sigevn results
#bind e send "0vEEEEEEEE" C-m "vim_sigevn " \;\
	unbind e
	bind e send "0v\$" C-m "vim_sigevn " \;\
		paste-buffer \;\
		send C-m

	unbind h
	bind h list-keys

#unbind -n C-l
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

	bind C-c clear-history

# ----------------------
# Status Bar
# -----------------------
	set-option -g status on                # turn the status bar on
	set -g status-utf8 on                  # set utf-8 for the status bar
	set -g status-interval 5               # set update frequencey (default 15 seconds)
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
	setw -g monitor-activity on
	set -g visual-activity on
	set-option -gw window-status-activity-attr bold
	set-option -gw window-status-activity-bg colour239
	set-option -gw window-status-activity-fg white
#set-option -gw window-status-activity-fg default

# monitor content
	setw -g monitor-content 'Lock'
	set-option -gw window-status-content-attr bold
	set-option -gw window-status-content-bg red
	set-option -gw window-status-content-fg white

# set pane colors
	set -g pane-border-fg colour245
	set -g pane-active-border-fg colour39

# set message colors
	set -g message-fg colour16
	set -g message-bg colour221
	set -g message-attr bold

	set-window-option -g window-status-bell-bg yellow

# format status bar
	set -g status-left-length 52
	set -g status-right-length 451
	set -g status-fg white
	set -g status-bg colour234

# format left portion of status bar
	set -g status-left '#{?client_prefix,#[bg=colour252],#[bg=colour134]}#[fg=colour235,bold] ❐ #S \
#{?client_prefix,#[fg=colour252],#[fg=colour134]}#[bg=colour238,nobold]\
#[fg=colour245,bg=colour238,bold] #(whoami) #[reverse,nobold]\
#[fg=colour245,bg=colour234,bold] #h #[bg=colour245,fg=colour234,nobold]  '

# format window (center) portion of status bar
	set -g status-justify left           # center window list for clarity (left, centre, right)
	set -g window-status-fg colour252
	set -g window-status-bg colour234
#set -g window-status-format "#[fg=colour234,noreverse]#I #W #[fg=colour234,reverse]"
	set -g window-status-format "#[fg=colour234,bg=default]#[fg=default,default]#I#[fg=colour235,bg=default,bold] #[fg=default,bg=default,noreverse]#W  #[fg=colour234,bg=default,nobold,reverse]"
	set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold]#I #W #[fg=colour39,bg=colour234,nobold]"

# format right portion of status bar
	set -g status-right "#[fg=colour39,bg=colour234]#[fg=colour25,bg=colour39,noreverse,bold] p:#P #[fg=colour166,bg=colour39]#[fg=brightyellow,bg=colour166,noreverse,bold] %Y-%m-%d_#(date -u | awk '{print $4}' | awk -F: '{print $1$2}') "


register_user_stylesheet(
    "data:text/css,"+
        escape(
            "#minibuffer, .mode-line { font-size: 16px;}\n"+
            "#minibuffer-prompt { color: red; }" +
            "span.__conkeror_hint { border: 1px solid #66d9ef !important;" +
                " color: white !important;" +
                " background-color: #ae81ff !important;" +
                )
);

// load download buffers in the background in the current window, instead of in new windows.
download_buffer_automatic_open_target = OPEN_NEW_BUFFER_BACKGROUND;

require("favicon");

// To enable favicons in the mode-line:
add_hook("mode_line_hook", mode_line_adder(buffer_icon_widget), true);

// To enable favicons in the read_buffer completions list:
read_buffer_show_icons = true; 

/* eye-guide */
require('eye-guide.js');
define_key(content_buffer_normal_keymap, "C-f", "eye-guide-scroll-down");
define_key(content_buffer_normal_keymap, "C-b", "eye-guide-scroll-up");

/* window */
can_kill_last_buffer = false; // Don't let kill-buffer close the window

/* hint */
// save a keystroke when selecting a dom node by number.
hints_auto_exit_delay = 100;
hints_ambiguous_auto_exit_delay = 2500;

// colors
hint_background_color = "#66d9ef"
active_hint_background_color = "#fd971f"
img_hint_background_color = "cyan"
active_img_hint_background_color = "#2f4f4f"

// display properties of the current selected node during the hints interaction.
hints_display_url_panel = true;

// big hint number
register_user_stylesheet(
    "data:text/css," +
        escape(
            "span.__conkeror_hint {" +
            " font-size: 10px !important;" +
            " line-height: 12px !important;" +
"}"));

// hint's color
register_user_stylesheet(
    "data:text/css," +
        escape (
            "span.__conkeror_hint {" +
            " border: 1px solid #66d9ef !important;" +
            " color: white !important;" +
            " background-color: #ae81ff !important;" +
"}"));

select {
border: 1px inset gray;
background-color: white;
color: i#fd971f;
-moz-appearance: none !important;
}

/* isearch */
isearch_keep_selection = true; // keep the found item selected after search mode ends

// zoom
function my_zoom_set (buffer) {
    browser_zoom_set(buffer, false, 80);
}
add_hook('create_buffer_late_hook', my_zoom_set);
zoom_levels = [ 60, 70, 75, 80, 85, 90, 100, 110,
                120, 125, 130, 140, 150, 200, 300, 500, 1000, 2000 ];
// history webjump
define_browser_object_class(
    "history-url", null, 
    function (I, prompt) {
        check_buffer (I.buffer, content_buffer);
        var result = yield I.buffer.window.minibuffer.read_url(
        $prompt = prompt,  $use_webjumps = false, $use_history = true, $use_bookmarks = false);
        yield co_return (result);
});

interactive("find-url-from-history",
        "Find a page from history in the current buffer",
        "find-url",
        $browser_object = browser_object_history_url);

interactive("find-url-from-history-new-buffer",
        "Find a page from history in the current buffer",
        "find-url-new-buffer",
        $browser_object = browser_object_history_url);

define_key(content_buffer_normal_keymap, "H", "find-url-from-history-new-buffer");
define_key(content_buffer_normal_keymap, "C-H", "find-url-from-history");

// possibly valid URL
function possibly_valid_url (str) {
    return (/[\.\/:]/.test(str)) &&
            !(/\S\s+\S/.test(str)) &&
            !(/^\s*$/.test(str));
}

// load session module
require("session.js");
session_auto_save_auto_load = true; // auto-load session

// don't open download buffer automatically
remove_hook("download_added_hook", open_download_buffer_automatically);

// webjumps
// set default webjump
read_url_handler_list = [read_url_make_default_webjump_handler("google")];
define_webjump("gmail", "https://mail.google.com/mail/u/0/"); //primary account
define_webjump("gplus", "https://plus.google.com/u/0/");
define_webjump("adhoc", "https://plus.google.com/u/0/b/100249597703155313450/100249597703155313450/posts");
define_webjump("gcal", "https://www.google.com/calendar/render?hl=en&safe=on");
define_webjump("gimages", "http://www.google.com/images?q=%s", $alternative = "http://www.google.com/imghp");
define_webjump("gdrive", "https://drive.google.com/?tab=no&authuser=0#my-drive");
define_webjump("gvoice", "https://www.google.com/voice?pli=1#inbox");
define_webjump("youtube", "http://www.youtube.com/results?search_query=%s&search=Search");
define_webjump("news", "http://news.google.com/news/search?q=%s");
define_webjump("stackoverflow","http://stackoverflow.com/search?q=%s", $alternative="http://stackoverflow.com");
define_webjump("bashfaq",
    "http://mywiki.wooledge.org/BashFAQ?action=fullsearch&context=180&value=%s&fullsearch=Text",
    $alternative = "http://mywiki.wooledge.org/BashFAQ");
require("page-modes/wikipedia.js");
wikipedia_webjumps_format = "wp-%s"; // controls the names of the webjumps.  default is "wikipedia-%s".
define_wikipedia_webjumps("en", "de", "fr"); // For English, German and French.
// define_wikipedia_webjumps(); // To make use of ALL of the webjumps (200+).
define_webjump("amazon", "http://www.amazon.com/exec/obidos/external-search/?field-keywords=%s&mode=blended");
define_webjump("github", "http://github.com/search?q=%s&type=Everything");
define_webjump("wunderground", "http://www.wunderground.com/cgi-bin/findweather/getForecast?query=%s");

// Keys //
// As a matter of courtesy to Vim
define_key(caret_keymap, "j", "caret-forward-line");
define_key(caret_keymap, "k", "caret-backward-line");
define_key(caret_keymap, "h", "caret-backward-char");
define_key(caret_keymap, "l", "caret-forward-char");
define_key(content_buffer_normal_keymap, "/", "isearch-forward");
define_key(content_buffer_normal_keymap, "?", "isearch-backward");
define_key(content_buffer_normal_keymap, "n", "isearch-continue-forward");
define_key(content_buffer_normal_keymap, "N", "isearch-continue-backward");
define_key(content_buffer_normal_keymap, "C-o", 'back');
define_key(content_buffer_normal_keymap, "C-i", 'forward');
define_key(content_buffer_normal_keymap, "b", "switch-to-buffer");
define_key(content_buffer_normal_keymap, "B", "list-bookmarks");
define_key(content_buffer_normal_keymap, "g", "cmd_scrollTop");
define_key(content_buffer_normal_keymap, "G", "cmd_scrollBottom");
define_key(content_buffer_normal_keymap, ":", "execute-extended-command");
//define_key(content_buffer_text_keymap, "C-c", "cmd_copy");
define_key(content_buffer_normal_keymap, "C-c", "cmd_copy");
define_key(content_buffer_normal_keymap, "C-C", "copy-current-url");
define_key(content_buffer_normal_keymap, "C-subtract", "zoom-out-text");
define_key(content_buffer_normal_keymap, "C-add", "zoom-in-text");
define_key(content_buffer_normal_keymap, "d", "kill-current-buffer");
define_key(content_buffer_normal_keymap, "C-d", "kill-current-buffer");

define_key(content_buffer_normal_keymap, "j", "cmd_scrollLineDown");
define_key(content_buffer_normal_keymap, "k", "cmd_scrollLineUp");
define_key(content_buffer_normal_keymap, "h", "cmd_scrollLeft");
define_key(content_buffer_normal_keymap, "l", "cmd_scrollRight");
define_key(content_buffer_normal_keymap, "o", "find-url");
define_key(content_buffer_normal_keymap, "t", "find-url-new-buffer");
define_key(content_buffer_normal_keymap, "F", "follow-new-buffer");
define_key(content_buffer_normal_keymap, "C-h", "buffer-next");
define_key(content_buffer_normal_keymap, "C-l", "buffer-previous");
define_key(content_buffer_normal_keymap, "y", "copy");
//define_key(content_buffer_normal_keymap, "C-f", "cmd_scrollPageDown");
//define_key(content_buffer_normal_keymap, "C-b", "cmd_scrollPageUp");


// don't show clock
remove_hook("mode_line_hook", mode_line_adder(clock_widget));

// show buffer count in modeline
add_hook("mode_line_hook", mode_line_adder(buffer_count_widget), true);

// show loading buffer count widget
add_hook("mode_line_hook", mode_line_adder(loading_count_widget), true);

// disable scrollbars
//function disable_scrollbars (buffer) {
//    buffer.top_frame.scrollbars.visible = false;
//}
//add_hook("create_buffer_late_hook", disable_scrollbars);

// display the url before going to it in hints mode
hints_display_url_panel = false;

// Mode-line
mode_line_mode(true);

// auto completion in the minibuffer
minibuffer_auto_complete_default = true;
url_completion_use_history = true; // should work since bf05c87405
url_completion_use_bookmarks = true;

